#!/bin/sh

# Read a line coming from `./aggregate.perl --sort-by regression ...`
# and automatically bisect to find the commit responsible for the
# performance regression.
#
# Lines from `./aggregate.perl --sort-by regression ...` look like:
#
# +33.3% p7820-grep-engines.1 0.03(0.08+0.02) 0.04(0.08+0.02) v2.14.3 v2.15.1
#

die () {
	echo >&2 "error: $*"
	exit 1
}

read -r regression subtest oldtime newtime oldrev newrev

# echo "regression: $regression"
# echo "subtest: $subtest"
# echo "oldtime: $oldtime"
# echo "newtime: $newtime"
# echo "oldrev: $oldrev"
# echo "newrev: $newrev"

test_script=$(echo "$subtest" | sed -e 's/\(.*\)\.[0-9]*$/\1.sh/')
test_number=$(echo "$subtest" | sed -e 's/.*\.\([0-9]*\)$/\1/')

# Bisecting must be performed from the top level directory (even with --no-checkout)
(
	toplevel_dir=$(git rev-parse --show-toplevel) || die "Failed to find top level directory"
	cd "$toplevel_dir" || die "Failed to cd into top level directory '$toplevel_dir'"  

	git bisect start --no-checkout "$newrev" "$oldrev" || die "Failed to start bisecting"
)

